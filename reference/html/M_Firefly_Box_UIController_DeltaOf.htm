<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>UIController.DeltaOf Method</title><meta name="Title" content="DeltaOf" /><meta name="Help.Id" content="M:Firefly.Box.UIController.DeltaOf(System.Func{Firefly.Box.Number})" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Firefly.Box" /><meta name="guid" content="M_Firefly_Box_UIController_DeltaOf" /><meta name="Description" content="Returns The delta between the value of before the event, and the current value of" /><meta name="tocFile" content="../toc/IDC0LB0A.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">Firefly Migration Reference</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>UIController<span id="LST1DB1BD5E_0" data-languageSpecificText="cpp=::|nu=."></span>Delta<wbr />Of Method</h1><div class="summary">Returns The delta between the value of <span class="parameter">expression</span> before the <a href="E_Firefly_Box_UIController_EnterRow.htm">EnterRow</a> event, and the current value of <span class="parameter">expression</span></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Firefly_Box.htm">Firefly.Box</a><br /><strong>Assembly:</strong> Firefly.Box (in Firefly.Box.dll) Version: debug-master-v:33791<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="identifier">Number</span> <span class="identifier">DeltaOf</span>(
	<span class="identifier">Func</span>&lt;<span class="identifier">Number</span>&gt; <span class="parameter">expression</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">DeltaOf</span> ( 
	<span class="parameter">expression</span> <span class="keyword">As</span> <span class="identifier">Func</span>(<span class="keyword">Of</span> <span class="identifier">Number</span>)
) <span class="keyword">As</span> <span class="identifier">Number</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">member</span> <span class="identifier">DeltaOf</span> : 
        <span class="parameter">expression</span> : <span class="identifier">Func</span>&lt;<span class="identifier">Number</span>&gt; <span class="keyword">-&gt;</span> <span class="identifier">Number</span> </code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">expression</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-1" target="_blank" rel="noopener noreferrer">Func</a><span id="LST1DB1BD5E_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="T_Firefly_Box_Number.htm">Number</a><span id="LST1DB1BD5E_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd> </dd></dl><h4 class="quickLinkHeader">Return Value</h4><a href="T_Firefly_Box_Number.htm">Number</a><br />The method returns The delta between the value of <span class="parameter">expression</span> before the <a href="E_Firefly_Box_UIController_EnterRow.htm">EnterRow</a> event, and the current value of <span class="parameter">expression</span></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDDCSection">Useful for maintaining a grand total in a form</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDECSection">How to use DeltaOf to maintain a grand total<br />This example is based on test data. The code for the entities included in this test data can be found in the documentation of <a href="T_Firefly_Box_Data_Entity.htm">Entity</a><br />This example uses automatic tools to generate parts of the user interface. Those tools can be found in the example of the documentation of <a href="T_Firefly_Box_UI_Form.htm">Form</a><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using Firefly.Box;
using Firefly.Box.Data;
using Firefly.Box.UI;

namespace TestFirefly.Box.Documentation
{
    public class JobsTotal
    {
        public void ShowJobs()
        {
            var jobs = new Pubs.Jobs();
            jobs.InitializeWithTestData();


            var totalMinLevel = new NumberColumn();
            var countJobs = new NumberColumn();
            //Calculate the total before running the task
            var bp = new BusinessProcess { From = jobs };
            bp.ForEachRow(() =&gt;
            {
                totalMinLevel.Value += jobs.MinLevel;
                countJobs.Value++;
            });

            //Create the total textbox 
            var totalTextBox = new TextBox
            {
                Data = totalMinLevel,
                AllowFocus = false
            };
            //Position the textbox below the grid
            totalTextBox.ResizeToFit(10);

            //Create a label
            var totalLabel = new Label
            {
                Text = "Total Min Level"
            };
            totalLabel.ResizeToFitContent();


            var countTextBox = new TextBox
            {
                Data = countJobs,
                AllowFocus = false
            };
            countTextBox.ResizeToFit(6);

            var countLabel = new Label { Text = "Number of jobs" };
            countLabel.ResizeToFitContent();


            //Create the UIController
            var uic = new UIController
            {
                From = jobs,
                View = UITools.GenerateFormWithGridFor(
                    "DeltaOf demo",
                    "Change the value of Min Level, and leave the row to see the affect on the totals.\n" +
                    "Try also deleting rows (using F3) and creating new ones."
                    , jobs.Id
                    , jobs.Description
                    , jobs.MinLevel)
            };
            UITools.AddControlsToForm(uic.View, countLabel, countTextBox, totalLabel, totalTextBox);

            var insertB = new Button { Text = "Insert New Row", Width = 150 };
            insertB.Click += (sender, e) =&gt; e.Raise(Command.InsertRow);

            var deleteB = new Button { Text = "Delete Row", Width = 100 };
            deleteB.Click += (sender, e) =&gt; e.Raise(Command.DeleteRow);
            UITools.AddControlsToForm(uic.View, insertB, deleteB);

            //Add all the jobs columns to the Columns Collection
            uic.AddAllColumns();
            //Add the total columns to the columns collection
            uic.Columns.Add(totalMinLevel, countJobs);

            uic.SavingRow += ( b) =&gt; //When the row is left, update the total with the delta in the MinLevel
            {
                totalMinLevel.AddDeltaOf(() =&gt; jobs.MinLevel);
                countJobs.AddDeltaOf(() =&gt; 1);
            };

            uic.Run();
        }
    }
}</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="T_Firefly_Box_UIController.htm">UIController Class</a></div><div><a href="N_Firefly_Box.htm">Firefly.Box Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Return Value</a></li></ul></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p><a href="www.fireflymigration.com" target="_blank" rel="noopener noreferrer">Copyright Firefly ltd</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:info%40fireflymigration.com?Subject=Firefly%20Migration%20Reference">Send comments on this topic to</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>