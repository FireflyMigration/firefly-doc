<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>BusinessProcess Class</title><meta name="Title" content="BusinessProcess" /><meta name="Help.Id" content="T:Firefly.Box.BusinessProcess" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Firefly.Box" /><meta name="guid" content="T_Firefly_Box_BusinessProcess" /><meta name="Description" content="Used to iterate rows of entities and perform business logic operations, without user interaction." /><meta name="tocFile" content="../toc/IDA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">Firefly Migration Reference</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Business<wbr />Process Class</h1><div class="summary">Used to iterate rows of entities and perform business logic operations, without user interaction.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Firefly_Box.htm">Firefly.Box</a><br /><strong>Assembly:</strong> Firefly.Box (in Firefly.Box.dll) Version: debug-master-v:33791<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">BusinessProcess</span> : <span class="identifier">ITask</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">BusinessProcess</span>
	<span class="keyword">Implements</span> <span class="identifier">ITask</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="identifier">SealedAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">BusinessProcess</span> = 
    <span class="keyword">class</span>
        <span class="keyword">interface</span> <span class="identifier">ITask</span>
    <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">BusinessProcess</span></dd></dl><dl class="implementsList"><dt>Implements</dt><dd><a href="T_Firefly_Box_Advanced_ITask.htm">ITask</a></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDBCSection">The business process is executed using the <a href="M_Firefly_Box_BusinessProcess_Run.htm">Run<span id="LSTA93E10BA_0" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method. See the <a href="M_Firefly_Box_BusinessProcess_Run.htm">Run<span id="LSTA93E10BA_1" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method for a detailed explanation of the event flow for the <span class="selflink">BusinessProcess</span></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDCCSection">This example demonstrates several examples of using a <span class="selflink">BusinessProcess</span><br />This example is in the form of Unit Tests. It references the NUnit framework. This framework can be downloaded from <a href="http://www.NUnit.org">www.NUnit.org</a>. For more information about unit testing visit: <a href="http://www.NUnit.org">www.NUnit.org</a>.<br />This example is based on test data. The code for the entities included in this test data can be found in the documentation of <a href="T_Firefly_Box_Data_Entity.htm">Entity</a><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using System;
using System.Collections.Generic;
using System.Text;
using NUnit.Framework;
using Firefly.Box;
using Firefly.Box.Testing;

namespace TestFirefly.Box.Documentation
{
    [TestFixture]
    public class DemoBusinessProcess
    {
        [Test]
        public void IterateAllRows()
        {
            var employees = new Pubs.Employees();
            employees.InitializeWithTestData();// Insert test data to the table

            var bp = new BusinessProcess
                         {
                             From = employees,
                             Activity = Activities.Update // The default activity
                         };
            int numberOfEmployeesWithoutMiddleInitials = 0;
            bp.ForEachRow(() =&gt;
                              {
                                  if (employees.MiddleInitial == "")
                                      numberOfEmployeesWithoutMiddleInitials++;
                              });
            numberOfEmployeesWithoutMiddleInitials.ShouldBe(10);//Checks that there are 10 employees in the test data without a middle initial
        }
        [Test]
        public void DeleteEmployeesWithJob5()
        {

            var employees = new Pubs.Employees();
            employees.InitializeWithTestData();// Insert test data to the table
            employees.CountRows().ShouldBe(43);// Verifies that the test data has 43 rows

            var bp = new BusinessProcess
                         {
                             From = employees,
                             Activity = Activities.Delete
                         };
            bp.Where.Add(employees.JobId.IsEqualTo(5));
            bp.Run();

            employees.CountRows().ShouldBe(36);// Verifies that after the delete, only 36 rows remain
        }
        [Test]
        public void InsertAnEmployee()
        {
            var employees = new Pubs.Employees();
            employees.InitializeWithTestData();// Insert test data to the table
            employees.CountRows().ShouldBe(43); // Verifies that the test data has 43 rows

            var bp = new BusinessProcess
                         {
                             From = employees,
                             Activity = Activities.Insert
                         };
            bp.ForFirstRow(() =&gt;
                               {
                                   employees.Id.Value = "ID-1234";
                                   employees.FirstName.Value = "John";
                                   employees.LastName.Value = "Doe";
                               });
            employees.CountRows().ShouldBe(44);// Verifies that after the insert, there are 44 rows in the test data
        }
    }
}</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDAMFASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="M_Firefly_Box_BusinessProcess__ctor.htm">BusinessProcess<span id="LSTA93E10BA_2" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>Initializes a new instance of the <span class="selflink">BusinessProcess</span> class.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess__ctor_1.htm">BusinessProcess(BusinessProcess<span id="LSTA93E10BA_3" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>AdvancedSettings)</a></td><td>Initializes a new instance of the <span class="selflink">BusinessProcess</span> class.</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="ID0BB0FASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="P_Firefly_Box_BusinessProcess_Activity.htm">Activity</a></td><td>
            Determines the main activity to be performed in this <span class="selflink">BusinessProcess</span></td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_AllowUserAbort.htm">AllowUserAbort</a></td><td>
            Gets or sets the value determining if the <span class="selflink">BusinessProcess</span> will listen to certain inputs from the user that will cause it to terminate.<br /></td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_AutoCompute.htm">AutoCompute</a></td><td> </td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_BindEntireDataviewRowBeforeWhereExpression.htm">BindEntireDataviewRowBeforeWhereExpression</a></td><td> </td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_Columns.htm">Columns</a></td><td>Gets the columns that are used in this <span class="selflink">BusinessProcess</span></td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_Counter.htm">Counter</a></td><td>
            Returns the number of cycles started so far. 
            </td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_CurrentHandledCommand.htm">CurrentHandledCommand</a></td><td>
            Return the currently handled command
            </td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_CurrentHandledControl.htm">CurrentHandledControl</a></td><td>
            Return the currently handled control
            </td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_CurrentHandledKey.htm">CurrentHandledKey</a></td><td>
            Return the currently handled key combination
            </td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_Entities.htm">Entities</a></td><td>Gets  entities that are associated to this <span class="selflink">BusinessProcess</span> by the <a href="P_Firefly_Box_BusinessProcess_From.htm">From</a> property and <a href="P_Firefly_Box_BusinessProcess_Relations.htm">Relations</a> property</td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_From.htm">From</a></td><td>Determines the <a href="T_Firefly_Box_Data_Entity.htm">Entity</a> who's rows the <span class="selflink">BusinessProcess</span> will perform it's iteration on.</td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_Groups.htm">Groups</a></td><td>Gets the value determining the <span class="selflink">BusinessProcess</span>'s groups</td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_Handlers.htm">Handlers</a></td><td>Gets  the <span class="selflink">BusinessProcess</span>'s handlers</td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_InTransaction.htm">InTransaction</a></td><td>Gets the value determining if a transaction is currently open.</td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_KeepViewVisibleAfterExit.htm">KeepViewVisibleAfterExit</a></td><td>Gets or sets the value determining if the <span class="selflink">BusinessProcess</span>'s form should remain visible after the <span class="selflink">BusinessProcess</span> exits.</td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_Module.htm">Module</a></td><td>Gets or sets the value determining the <a href="T_Firefly_Box_Advanced_ModuleController.htm">ModuleController</a> to whom this <span class="selflink">BusinessProcess</span> is associated</td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_NonDbWhere.htm">NonDbWhere</a></td><td>
            This Where will always be evaluated in memory and may have performance implications
            </td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_OrderBy.htm">OrderBy</a></td><td>Gets or sets the value determining order in which the rows are ordered</td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_Relations.htm">Relations</a></td><td>Get this <span class="selflink">BusinessProcess</span> relations</td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_ReloadRowBeforeGroupEnter.htm">ReloadRowBeforeGroupEnter</a></td><td> </td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_RowChanged.htm">RowChanged</a></td><td>
            Indicates if the current row has changed. 
            </td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_RowLocking.htm">RowLocking</a></td><td>Gets or sets the value determining the <span class="selflink">BusinessProcess</span>'s row locking strategy</td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_ShowView.htm">ShowView</a></td><td>Gets or sets the value determining if the view specified in the <a href="P_Firefly_Box_BusinessProcess_View.htm">View</a> property should be displayed when this <span class="selflink">BusinessProcess</span> is executed.</td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_Title.htm">Title</a></td><td>Gets or sets  the <span class="selflink">BusinessProcess</span>'s title</td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_TransactionScope.htm">TransactionScope</a></td><td>Gets or sets the value determining the <span class="selflink">BusinessProcess</span>'s transaction scope</td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_TransactionScopeGroup.htm">TransactionScopeGroup</a></td><td> </td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_TransactionType.htm">TransactionType</a></td><td> </td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_UserInterfaceRefreshInterval.htm">UserInterfaceRefreshInterval</a></td><td>sets the value determining the interval in milliseconds for the user interface refresh</td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_UserInterfaceRefreshRowsInterval.htm">UserInterfaceRefreshRowsInterval</a></td><td> </td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_View.htm">View</a></td><td>
            Determines the form to be displayed while this <span class="selflink">BusinessProcess</span> is running
            </td></tr><tr><td><a href="P_Firefly_Box_BusinessProcess_Where.htm">Where</a></td><td>Gets the value determining the filter that will be applied on the rows of this <span class="selflink">BusinessProcess</span>.</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDNFASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Firefly_Box_BusinessProcess_AddAllColumns.htm">AddAllColumns</a></td><td>Adds all the columns of the <a href="T_Firefly_Box_Data_Entity.htm">Entity</a> determined in the <a href="P_Firefly_Box_BusinessProcess_From.htm">From</a> property, and all the entities specified in the <a href="P_Firefly_Box_BusinessProcess_Relations.htm">Relations</a> property to the <a href="P_Firefly_Box_BusinessProcess_Columns.htm">Columns</a> property collection.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_BindKeepViewVisibleAfterExit.htm">BindKeepViewVisibleAfterExit</a></td><td>Sets an expression that will determine the value of the <a href="P_Firefly_Box_BusinessProcess_KeepViewVisibleAfterExit.htm">KeepViewVisibleAfterExit</a> property.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_DeleteRowAfterLeavingItIf.htm">DeleteRowAfterLeavingItIf</a></td><td>Sets an expression that determines if the current row will be deleted once left.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_DeltaOf.htm">DeltaOf</a></td><td>Returns The delta between the value of <span class="parameter">expression</span> before the <a href="E_Firefly_Box_BusinessProcess_EnterRow.htm">EnterRow</a> event, and the current value of <span class="parameter">expression</span></td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Exit.htm">Exit<span id="LSTA93E10BA_4" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>Instructs the <span class="selflink">BusinessProcess</span> to exit.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Exit_1.htm">Exit(ExitTiming)</a></td><td>Instructs the <span class="selflink">BusinessProcess</span> to exit.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Exit_2.htm">Exit(ExitTiming, Func<span id="LSTA93E10BA_5" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Boolean<span id="LSTA93E10BA_6" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>Instructs the <span class="selflink">BusinessProcess</span> to exit.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_ForEachRow_1.htm">ForEachRow(Action)</a></td><td>
            Performs the specified action on each row that matches the <a href="P_Firefly_Box_BusinessProcess_Where.htm">Where</a> property filter.
            </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_ForEachRow.htm">ForEachRow(FilterBase, Action)</a></td><td>
            Performs the specified action on each row that matches the <a href="P_Firefly_Box_BusinessProcess_Where.htm">Where</a> property filter.
            </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_ForFirstRow_1.htm">ForFirstRow(Action)</a></td><td>Performs the specified action on the first row that matches the <a href="P_Firefly_Box_BusinessProcess_Where.htm">Where</a> property filter.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_ForFirstRow.htm">ForFirstRow(FilterBase, Action)</a></td><td>Performs the specified action on the first row that matches the <a href="P_Firefly_Box_BusinessProcess_Where.htm">Where</a> property filter.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Get.htm">Get(Func<span id="LSTA93E10BA_7" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Number<span id="LSTA93E10BA_8" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Get_2.htm">Get(Func<span id="LSTA93E10BA_9" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Text<span id="LSTA93E10BA_10" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Get_1.htm">Get(Func<span id="LSTA93E10BA_11" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Number<span id="LSTA93E10BA_12" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, FilterBase)</a></td><td> </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Get_3.htm">Get(Func<span id="LSTA93E10BA_13" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Text<span id="LSTA93E10BA_14" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, FilterBase)</a></td><td> </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Get__1.htm">Get<span id="LSTA93E10BA_15" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTA93E10BA_16" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(TypedColumnBase<span id="LSTA93E10BA_17" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTA93E10BA_18" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Get__1_1.htm">Get<span id="LSTA93E10BA_19" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTA93E10BA_20" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(TypedColumnBase<span id="LSTA93E10BA_21" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTA93E10BA_22" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, FilterBase)</a></td><td> </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode#system-object-gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function. <br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype#system-object-gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Invoke_2.htm">Invoke(Action)</a></td><td>Invokes a <span class="parameter">action</span> that will be handled by an <a href="T_Firefly_Box_Handler.htm">Handler</a>.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Invoke_1.htm">Invoke(CommandWithArgs)</a></td><td>Invokes a <span class="parameter">command</span> that will be handled by an <a href="T_Firefly_Box_Handler.htm">Handler</a>.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Invoke.htm">Invoke(Command, <span id="LSTA93E10BA_23" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTA93E10BA_24" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>Invokes a <span class="parameter">command</span> that will be handled by an <a href="T_Firefly_Box_Handler.htm">Handler</a>.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Invoke_4.htm">Invoke(Keys, <span id="LSTA93E10BA_25" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTA93E10BA_26" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>Invokes a <span class="parameter">keyCombination</span> that will be handled by an <a href="T_Firefly_Box_Handler.htm">Handler</a>.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Invoke_3.htm">Invoke(String, <span id="LSTA93E10BA_27" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTA93E10BA_28" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>Invokes a <span class="parameter">customCommandKey</span> that will be handled by an <a href="T_Firefly_Box_Handler.htm">Handler</a>.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Invoke__1.htm">Invoke<span id="LSTA93E10BA_29" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTA93E10BA_30" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Command, ArrayColumn<span id="LSTA93E10BA_31" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTA93E10BA_32" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Invoke__1_2.htm">Invoke<span id="LSTA93E10BA_33" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTA93E10BA_34" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Keys, ArrayColumn<span id="LSTA93E10BA_35" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTA93E10BA_36" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Invoke__1_1.htm">Invoke<span id="LSTA93E10BA_37" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTA93E10BA_38" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(String, ArrayColumn<span id="LSTA93E10BA_39" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTA93E10BA_40" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_LockCurrentRow.htm">LockCurrentRow</a></td><td>Locks the current row for the <a href="T_Firefly_Box_Data_Entity.htm">Entity</a> specified in the <a href="P_Firefly_Box_BusinessProcess_From.htm">From</a> property , and all the entities specified in the <a href="P_Firefly_Box_BusinessProcess_Relations.htm">Relations</a> property collection.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_MarkRowAsChanged.htm">MarkRowAsChanged</a></td><td> </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_PerformCompute.htm">PerformCompute</a></td><td> </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Raise_1.htm">Raise(CommandWithArgs)</a></td><td>Raises a <span class="parameter">command</span> that will be handled by an <a href="T_Firefly_Box_Handler.htm">Handler</a>.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Raise.htm">Raise(Command, <span id="LSTA93E10BA_41" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTA93E10BA_42" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>Raises a <span class="parameter">command</span> that will be handled by an <a href="T_Firefly_Box_Handler.htm">Handler</a>.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Raise_3.htm">Raise(Keys, <span id="LSTA93E10BA_43" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTA93E10BA_44" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>Raises a <span class="parameter">keyCombination</span> that will be handled by an <a href="T_Firefly_Box_Handler.htm">Handler</a>.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Raise_2.htm">Raise(String, <span id="LSTA93E10BA_45" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTA93E10BA_46" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>Raises a <span class="parameter">customCommandKey</span> that will be handled by an <a href="T_Firefly_Box_Handler.htm">Handler</a>.</td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Raise__1.htm">Raise<span id="LSTA93E10BA_47" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTA93E10BA_48" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Command, ArrayColumn<span id="LSTA93E10BA_49" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTA93E10BA_50" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Raise__1_2.htm">Raise<span id="LSTA93E10BA_51" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTA93E10BA_52" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Keys, ArrayColumn<span id="LSTA93E10BA_53" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTA93E10BA_54" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Raise__1_1.htm">Raise<span id="LSTA93E10BA_55" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTA93E10BA_56" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(String, ArrayColumn<span id="LSTA93E10BA_57" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTA93E10BA_58" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_ReadAllRows.htm">ReadAllRows</a></td><td>
            Used for quick, read-only pass over all the rows of the <span class="selflink">BusinessProcess</span>.
            </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Run.htm">Run</a></td><td>
            Runs the <span class="selflink">BusinessProcess</span></td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Sum_2.htm">Sum(Func<span id="LSTA93E10BA_59" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Number<span id="LSTA93E10BA_60" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Sum.htm">Sum(NumberColumn)</a></td><td> </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Sum_3.htm">Sum(Func<span id="LSTA93E10BA_61" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Number<span id="LSTA93E10BA_62" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, FilterBase)</a></td><td> </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_Sum_1.htm">Sum(NumberColumn, FilterBase)</a></td><td> </td></tr><tr><td><a href="M_Firefly_Box_BusinessProcess_ToString.htm">ToString</a></td><td>Returns a string that represents the current object.<br />(Overrides <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring#system-object-tostring" target="_blank" rel="noopener noreferrer">Object<span id="LSTA93E10BA_63" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>ToString<span id="LSTA93E10BA_64" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Events</h2><div id="IDAFASection"><table id="EventList" class="table is-hoverable"><tr><td><a href="E_Firefly_Box_BusinessProcess_AbortRowOccurred.htm">AbortRowOccurred</a></td><td> </td></tr><tr><td><a href="E_Firefly_Box_BusinessProcess_AfterSavingRow.htm">AfterSavingRow</a></td><td> </td></tr><tr><td><a href="E_Firefly_Box_BusinessProcess_BeforeExit.htm">BeforeExit</a></td><td> </td></tr><tr><td><a href="E_Firefly_Box_BusinessProcess_DatabaseErrorOccurred.htm">DatabaseErrorOccurred</a></td><td>Occurs when a database error occurs and after all the <a href="T_Firefly_Box_Data_DataProvider_DatabaseErrorHandler.htm">DatabaseErrorHandler</a> processed the error.</td></tr><tr><td><a href="E_Firefly_Box_BusinessProcess_End.htm">End</a></td><td>Occurs when the <span class="selflink">BusinessProcess</span> ends. Raised once for each <a href="M_Firefly_Box_BusinessProcess_Run.htm">Run<span id="LSTA93E10BA_65" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method. Preserves the last row data.</td></tr><tr><td><a href="E_Firefly_Box_BusinessProcess_EnterRow.htm">EnterRow</a></td><td>Occurs when a row is entered by this <span class="selflink">BusinessProcess</span> and after that row was loaded from the database.</td></tr><tr><td><a href="E_Firefly_Box_BusinessProcess_LeaveRow.htm">LeaveRow</a></td><td>Occurs when A Row is left, and before it is saved to the database.</td></tr><tr><td><a href="E_Firefly_Box_BusinessProcess_Load.htm">Load</a></td><td>Occurs when the <span class="selflink">BusinessProcess</span> is executed, before the <a href="E_Firefly_Box_BusinessProcess_Start.htm">Start</a> event and before the database query is constructed. Raised once for each <a href="M_Firefly_Box_BusinessProcess_Run.htm">Run<span id="LSTA93E10BA_66" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method.</td></tr><tr><td><a href="E_Firefly_Box_BusinessProcess_PreviewDatabaseError.htm">PreviewDatabaseError</a></td><td>Occurs when a database error occurs and before all the <a href="T_Firefly_Box_Data_DataProvider_DatabaseErrorHandler.htm">DatabaseErrorHandler</a> process the error.</td></tr><tr><td><a href="E_Firefly_Box_BusinessProcess_ProcessingCommand.htm">ProcessingCommand</a></td><td> </td></tr><tr><td><a href="E_Firefly_Box_BusinessProcess_SavingRow.htm">SavingRow</a></td><td>
            Occurs when the <span class="selflink">BusinessProcess</span> is about to save the row
            </td></tr><tr><td><a href="E_Firefly_Box_BusinessProcess_Start.htm">Start</a></td><td>Occurs when starts and after the <a href="E_Firefly_Box_BusinessProcess_Load.htm">Load</a> event. Raised once for each <a href="M_Firefly_Box_BusinessProcess_Run.htm">Run<span id="LSTA93E10BA_67" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method.</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Firefly_Box.htm">Firefly.Box Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Events</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p><a href="www.fireflymigration.com" target="_blank" rel="noopener noreferrer">Copyright Firefly ltd</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:info%40fireflymigration.com?Subject=Firefly%20Migration%20Reference">Send comments on this topic to</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>