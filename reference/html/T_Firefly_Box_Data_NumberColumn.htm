<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>NumberColumn Class</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="Firefly.Box.Data" /><meta name="file" content="T_Firefly_Box_Data_NumberColumn" /><meta name="guid" content="T_Firefly_Box_Data_NumberColumn" /><xml><MSHelp:Attr Name="AssetID" Value="T:Firefly.Box.Data.NumberColumn" /><MSHelp:TOCTitle Title="NumberColumn Class" /><MSHelp:RLTitle Title="NumberColumn Class (Firefly.Box.Data)" /><MSHelp:Keyword Index="A" Term="T:Firefly.Box.Data.NumberColumn" /><MSHelp:Keyword Index="A" Term="frlrfFireflyBoxDataNumberColumnClassTopic" /><MSHelp:Keyword Index="K" Term="NumberColumn class" /><MSHelp:Keyword Index="K" Term="Firefly.Box.Data.NumberColumn class" /><MSHelp:Keyword Index="K" Term="NumberColumn class, about NumberColumn class" /><MSHelp:Keyword Index="F" Term="NumberColumn" /><MSHelp:Keyword Index="F" Term="Firefly.Box.Data.NumberColumn" /><MSHelp:Attr Name="HelpPriority" Value="2" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="Firefly.Box.dll" /><MSHelp:Attr Name="APIName" Value="Firefly.Box.Data.NumberColumn" /><MSHelp:Attr Name="DevLang" Value="CSharp" /><MSHelp:Attr Name="DevLang" Value="VB" /><MSHelp:Attr Name="DevLang" Value="C++" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="Abstract" Value="Represents a column of type" /><MSHelp:Attr Name="AssemblyVersion" Value="3.4.23.6473" /></xml><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"></script></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /><input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Firefly Box</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">NumberColumn Class</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="AllMembers_T_Firefly_Box_Data_NumberColumn.htm">Members</a>  <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a>  <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a>  
  <span id="headfeedbackarea" class="feedbackhead">
      <a href="javascript:SubmitFeedback('info@fireflybox.com','Firefly Box','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">
        
        Send Feedback
      </a>
	</span>
</td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"> <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p></span><div class="summary">Represents a column of type <a href="T_Firefly_Box_Number.htm">Number</a></div><p />
    <b>Namespace:</b> 
   <a href="N_Firefly_Box_Data.htm">Firefly.Box.Data</a><br />
    <b>Assembly:</b>
   <span sdata="assembly">Firefly.Box</span> (in Firefly.Box.dll) Version: 3.4.23.6473 (3.4.23.6473)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">NumberColumn</span> : <a href="T_Firefly_Box_Data_Advanced_TypedColumnBase_1.htm">TypedColumnBase</a>&lt;<a href="T_Firefly_Box_Number.htm">Number</a>&gt;</pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic (Declaration)</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">NumberColumn</span> _
	<span class="keyword">Inherits</span> <a href="T_Firefly_Box_Data_Advanced_TypedColumnBase_1.htm">TypedColumnBase</a>(<span class="keyword">Of</span> <a href="T_Firefly_Box_Number.htm">Number</a>)</pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">NumberColumn</span> : <span class="keyword">public</span> <a href="T_Firefly_Box_Data_Advanced_TypedColumnBase_1.htm">TypedColumnBase</a>&lt;<a href="T_Firefly_Box_Number.htm">Number</a>^&gt;</pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="">This class manages all the interaction between the user code, and the database storage of this <span class="selflink">NumberColumn</span></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style="">This example demonstrates the usage of pubs<br />This example is based on test data. The code for the entities included in this test data can be found in the documentation of <a href="T_Firefly_Box_Data_Entity.htm">Entity</a><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>C#</div><div class="code"><pre><span class="highlight-keyword">using</span> System.Text;
<span class="highlight-keyword">using</span> Firefly.Box.Data;
<span class="highlight-keyword">using</span> Firefly.Box;
<span class="highlight-keyword">using</span> Firefly.Box.Data.Advanced;
<span class="highlight-keyword">using</span> Firefly.Box.Data.DataProvider;

<span class="highlight-keyword">namespace</span> TestFirefly.Box.Documentation
{
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// This data base is based on tables from the Microsoft demo database "pubs". It's scripts can be downloaded from:</span>
    <span class="highlight-comment">/// http://www.microsoft.com/downloads/details.aspx?familyid=06616212-0356-46a0-8da2-eebc53a68034&amp;displaylang=en</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Pubs
    {
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Employees : Entity
        {
            [PrimaryKey]
            <span class="highlight-keyword">internal</span> <span class="highlight-keyword">readonly</span> TextColumn Id = <span class="highlight-keyword">new</span> TextColumn(<span class="highlight-literal">"emp_id"</span>, <span class="highlight-literal">"9"</span>, <span class="highlight-literal">"Id"</span>);
            <span class="highlight-keyword">internal</span> <span class="highlight-keyword">readonly</span> TextColumn FirstName = <span class="highlight-keyword">new</span> TextColumn(<span class="highlight-literal">"fname"</span>, <span class="highlight-literal">"20"</span>, <span class="highlight-literal">"First name"</span>);
            <span class="highlight-keyword">internal</span> <span class="highlight-keyword">readonly</span> TextColumn MiddleInitial = <span class="highlight-keyword">new</span> TextColumn(<span class="highlight-literal">"minit"</span>, <span class="highlight-literal">"1"</span>, <span class="highlight-literal">"Middle initial"</span>);
            <span class="highlight-keyword">internal</span> <span class="highlight-keyword">readonly</span> TextColumn LastName = <span class="highlight-keyword">new</span> TextColumn(<span class="highlight-literal">"lname"</span>, <span class="highlight-literal">"30"</span>, <span class="highlight-literal">"Last name"</span>);
            <span class="highlight-keyword">internal</span> <span class="highlight-keyword">readonly</span> JobId JobId = <span class="highlight-keyword">new</span> JobId();
            <span class="highlight-keyword">internal</span> <span class="highlight-keyword">readonly</span> JobLevel JobLevel = <span class="highlight-keyword">new</span> JobLevel();
            <span class="highlight-keyword">internal</span> <span class="highlight-keyword">readonly</span> PublisherId PublisherId = <span class="highlight-keyword">new</span> PublisherId();

            <span class="highlight-keyword">public</span> Employees():<span class="highlight-keyword">base</span>(<span class="highlight-literal">"employee"</span>,DataSource)
            {
            }
            <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> InitializeWithTestData()
            {
                Truncate();
                Insert(<span class="highlight-literal">"A-C71970F"</span>, <span class="highlight-literal">"Aria"</span>, <span class="highlight-literal">""</span>, <span class="highlight-literal">"Cruz"</span>, <span class="highlight-number">10</span>, <span class="highlight-number">87</span>, <span class="highlight-literal">"1389"</span>);
                Insert(<span class="highlight-literal">"A-R89858F"</span>, <span class="highlight-literal">"Annette"</span>, <span class="highlight-literal">""</span>, <span class="highlight-literal">"Roulet"</span>, <span class="highlight-number">6</span>, <span class="highlight-number">152</span>, <span class="highlight-literal">"9999"</span>);
                Insert(<span class="highlight-literal">"AMD15433F"</span>, <span class="highlight-literal">"Ann"</span>, <span class="highlight-literal">"M"</span>, <span class="highlight-literal">"Devon"</span>, <span class="highlight-number">3</span>, <span class="highlight-number">200</span>, <span class="highlight-literal">"9952"</span>);
                Insert(<span class="highlight-literal">"ARD36773F"</span>, <span class="highlight-literal">"Anabela"</span>, <span class="highlight-literal">"R"</span>, <span class="highlight-literal">"Domingues"</span>, <span class="highlight-number">8</span>, <span class="highlight-number">100</span>, <span class="highlight-literal">"0877"</span>);
                Insert(<span class="highlight-literal">"CFH28514M"</span>, <span class="highlight-literal">"Carlos"</span>, <span class="highlight-literal">"F"</span>, <span class="highlight-literal">"Hernadez"</span>, <span class="highlight-number">5</span>, <span class="highlight-number">211</span>, <span class="highlight-literal">"9999"</span>);
                Insert(<span class="highlight-literal">"CGS88322F"</span>, <span class="highlight-literal">"Carine"</span>, <span class="highlight-literal">"G"</span>, <span class="highlight-literal">"Schmitt"</span>, <span class="highlight-number">13</span>, <span class="highlight-number">64</span>, <span class="highlight-literal">"1389"</span>);
                Insert(<span class="highlight-literal">"DBT39435M"</span>, <span class="highlight-literal">"Daniel"</span>, <span class="highlight-literal">"B"</span>, <span class="highlight-literal">"Tonini"</span>, <span class="highlight-number">11</span>, <span class="highlight-number">75</span>, <span class="highlight-literal">"0877"</span>);
                Insert(<span class="highlight-literal">"DWR65030M"</span>, <span class="highlight-literal">"Diego"</span>, <span class="highlight-literal">"W"</span>, <span class="highlight-literal">"Roel"</span>, <span class="highlight-number">6</span>, <span class="highlight-number">192</span>, <span class="highlight-literal">"1389"</span>);
                Insert(<span class="highlight-literal">"ENL44273F"</span>, <span class="highlight-literal">"Elizabeth"</span>, <span class="highlight-literal">"N"</span>, <span class="highlight-literal">"Lincoln"</span>, <span class="highlight-number">14</span>, <span class="highlight-number">35</span>, <span class="highlight-literal">"0877"</span>);
                Insert(<span class="highlight-literal">"F-C16315M"</span>, <span class="highlight-literal">"Francisco"</span>, <span class="highlight-literal">""</span>, <span class="highlight-literal">"Chang"</span>, <span class="highlight-number">4</span>, <span class="highlight-number">227</span>, <span class="highlight-literal">"9952"</span>);
                Insert(<span class="highlight-literal">"GHT50241M"</span>, <span class="highlight-literal">"Gary"</span>, <span class="highlight-literal">"H"</span>, <span class="highlight-literal">"Thomas"</span>, <span class="highlight-number">9</span>, <span class="highlight-number">170</span>, <span class="highlight-literal">"0736"</span>);
                Insert(<span class="highlight-literal">"H-B39728F"</span>, <span class="highlight-literal">"Helen"</span>, <span class="highlight-literal">""</span>, <span class="highlight-literal">"Bennett"</span>, <span class="highlight-number">12</span>, <span class="highlight-number">35</span>, <span class="highlight-literal">"0877"</span>);
                Insert(<span class="highlight-literal">"HAN90777M"</span>, <span class="highlight-literal">"Helvetius"</span>, <span class="highlight-literal">"A"</span>, <span class="highlight-literal">"Nagy"</span>, <span class="highlight-number">7</span>, <span class="highlight-number">120</span>, <span class="highlight-literal">"9999"</span>);
                Insert(<span class="highlight-literal">"HAS54740M"</span>, <span class="highlight-literal">"Howard"</span>, <span class="highlight-literal">"A"</span>, <span class="highlight-literal">"Snyder"</span>, <span class="highlight-number">12</span>, <span class="highlight-number">100</span>, <span class="highlight-literal">"0736"</span>);
                Insert(<span class="highlight-literal">"JYL26161F"</span>, <span class="highlight-literal">"Janine"</span>, <span class="highlight-literal">"Y"</span>, <span class="highlight-literal">"Labrune"</span>, <span class="highlight-number">5</span>, <span class="highlight-number">172</span>, <span class="highlight-literal">"9901"</span>);
                Insert(<span class="highlight-literal">"KFJ64308F"</span>, <span class="highlight-literal">"Karin"</span>, <span class="highlight-literal">"F"</span>, <span class="highlight-literal">"Josephs"</span>, <span class="highlight-number">14</span>, <span class="highlight-number">100</span>, <span class="highlight-literal">"0736"</span>);
                Insert(<span class="highlight-literal">"KJJ92907F"</span>, <span class="highlight-literal">"Karla"</span>, <span class="highlight-literal">"J"</span>, <span class="highlight-literal">"Jablonski"</span>, <span class="highlight-number">9</span>, <span class="highlight-number">170</span>, <span class="highlight-literal">"9999"</span>);
                Insert(<span class="highlight-literal">"L-B31947F"</span>, <span class="highlight-literal">"Lesley"</span>, <span class="highlight-literal">""</span>, <span class="highlight-literal">"Brown"</span>, <span class="highlight-number">7</span>, <span class="highlight-number">120</span>, <span class="highlight-literal">"0877"</span>);
                Insert(<span class="highlight-literal">"LAL21447M"</span>, <span class="highlight-literal">"Laurence"</span>, <span class="highlight-literal">"A"</span>, <span class="highlight-literal">"Lebihan"</span>, <span class="highlight-number">5</span>, <span class="highlight-number">175</span>, <span class="highlight-literal">"0736"</span>);
                Insert(<span class="highlight-literal">"M-L67958F"</span>, <span class="highlight-literal">"Maria"</span>, <span class="highlight-literal">""</span>, <span class="highlight-literal">"Larsson"</span>, <span class="highlight-number">7</span>, <span class="highlight-number">135</span>, <span class="highlight-literal">"1389"</span>);
                Insert(<span class="highlight-literal">"M-P91209M"</span>, <span class="highlight-literal">"Manuel"</span>, <span class="highlight-literal">""</span>, <span class="highlight-literal">"Pereira"</span>, <span class="highlight-number">8</span>, <span class="highlight-number">101</span>, <span class="highlight-literal">"9999"</span>);
                Insert(<span class="highlight-literal">"M-R38834F"</span>, <span class="highlight-literal">"Martine"</span>, <span class="highlight-literal">""</span>, <span class="highlight-literal">"Rance"</span>, <span class="highlight-number">9</span>, <span class="highlight-number">75</span>, <span class="highlight-literal">"0877"</span>);
                Insert(<span class="highlight-literal">"MAP77183M"</span>, <span class="highlight-literal">"Miguel"</span>, <span class="highlight-literal">"A"</span>, <span class="highlight-literal">"Paolino"</span>, <span class="highlight-number">11</span>, <span class="highlight-number">112</span>, <span class="highlight-literal">"1389"</span>);
                Insert(<span class="highlight-literal">"MAS70474F"</span>, <span class="highlight-literal">"Margaret"</span>, <span class="highlight-literal">"A"</span>, <span class="highlight-literal">"Smith"</span>, <span class="highlight-number">9</span>, <span class="highlight-number">78</span>, <span class="highlight-literal">"1389"</span>);
                Insert(<span class="highlight-literal">"MFS52347M"</span>, <span class="highlight-literal">"Martin"</span>, <span class="highlight-literal">"F"</span>, <span class="highlight-literal">"Sommer"</span>, <span class="highlight-number">10</span>, <span class="highlight-number">165</span>, <span class="highlight-literal">"0736"</span>);
                Insert(<span class="highlight-literal">"MGK44605M"</span>, <span class="highlight-literal">"Matti"</span>, <span class="highlight-literal">"G"</span>, <span class="highlight-literal">"Karttunen"</span>, <span class="highlight-number">6</span>, <span class="highlight-number">220</span>, <span class="highlight-literal">"0736"</span>);
                Insert(<span class="highlight-literal">"MJP25939M"</span>, <span class="highlight-literal">"Maria"</span>, <span class="highlight-literal">"J"</span>, <span class="highlight-literal">"Pontes"</span>, <span class="highlight-number">5</span>, <span class="highlight-number">246</span>, <span class="highlight-literal">"1756"</span>);
                Insert(<span class="highlight-literal">"MMS49649F"</span>, <span class="highlight-literal">"Mary"</span>, <span class="highlight-literal">"M"</span>, <span class="highlight-literal">"Saveley"</span>, <span class="highlight-number">8</span>, <span class="highlight-number">175</span>, <span class="highlight-literal">"0736"</span>);
                Insert(<span class="highlight-literal">"PCM98509F"</span>, <span class="highlight-literal">"Patricia"</span>, <span class="highlight-literal">"C"</span>, <span class="highlight-literal">"McKenna"</span>, <span class="highlight-number">11</span>, <span class="highlight-number">150</span>, <span class="highlight-literal">"9999"</span>);
                Insert(<span class="highlight-literal">"PDI47470M"</span>, <span class="highlight-literal">"Palle"</span>, <span class="highlight-literal">"D"</span>, <span class="highlight-literal">"Ibsen"</span>, <span class="highlight-number">7</span>, <span class="highlight-number">195</span>, <span class="highlight-literal">"0736"</span>);
                Insert(<span class="highlight-literal">"PHF38899M"</span>, <span class="highlight-literal">"Peter"</span>, <span class="highlight-literal">"H"</span>, <span class="highlight-literal">"Franken"</span>, <span class="highlight-number">10</span>, <span class="highlight-number">75</span>, <span class="highlight-literal">"0877"</span>);
                Insert(<span class="highlight-literal">"PMA42628M"</span>, <span class="highlight-literal">"Paolo"</span>, <span class="highlight-literal">"M"</span>, <span class="highlight-literal">"Accorti"</span>, <span class="highlight-number">13</span>, <span class="highlight-number">35</span>, <span class="highlight-literal">"0877"</span>);
                Insert(<span class="highlight-literal">"POK93028M"</span>, <span class="highlight-literal">"Pirkko"</span>, <span class="highlight-literal">"O"</span>, <span class="highlight-literal">"Koskitalo"</span>, <span class="highlight-number">10</span>, <span class="highlight-number">80</span>, <span class="highlight-literal">"9999"</span>);
                Insert(<span class="highlight-literal">"PSA89086M"</span>, <span class="highlight-literal">"Pedro"</span>, <span class="highlight-literal">"S"</span>, <span class="highlight-literal">"Afonso"</span>, <span class="highlight-number">14</span>, <span class="highlight-number">89</span>, <span class="highlight-literal">"1389"</span>);
                Insert(<span class="highlight-literal">"PSP68661F"</span>, <span class="highlight-literal">"Paula"</span>, <span class="highlight-literal">"S"</span>, <span class="highlight-literal">"Parente"</span>, <span class="highlight-number">8</span>, <span class="highlight-number">125</span>, <span class="highlight-literal">"1389"</span>);
                Insert(<span class="highlight-literal">"PTC11962M"</span>, <span class="highlight-literal">"Philip"</span>, <span class="highlight-literal">"T"</span>, <span class="highlight-literal">"Cramer"</span>, <span class="highlight-number">2</span>, <span class="highlight-number">215</span>, <span class="highlight-literal">"9952"</span>);
                Insert(<span class="highlight-literal">"PXH22250M"</span>, <span class="highlight-literal">"Paul"</span>, <span class="highlight-literal">"X"</span>, <span class="highlight-literal">"Henriot"</span>, <span class="highlight-number">5</span>, <span class="highlight-number">159</span>, <span class="highlight-literal">"0877"</span>);
                Insert(<span class="highlight-literal">"R-M53550M"</span>, <span class="highlight-literal">"Roland"</span>, <span class="highlight-literal">""</span>, <span class="highlight-literal">"Mendel"</span>, <span class="highlight-number">11</span>, <span class="highlight-number">150</span>, <span class="highlight-literal">"0736"</span>);
                Insert(<span class="highlight-literal">"RBM23061F"</span>, <span class="highlight-literal">"Rita"</span>, <span class="highlight-literal">"B"</span>, <span class="highlight-literal">"Muller"</span>, <span class="highlight-number">5</span>, <span class="highlight-number">198</span>, <span class="highlight-literal">"1622"</span>);
                Insert(<span class="highlight-literal">"SKO22412M"</span>, <span class="highlight-literal">"Sven"</span>, <span class="highlight-literal">"K"</span>, <span class="highlight-literal">"Ottlieb"</span>, <span class="highlight-number">5</span>, <span class="highlight-number">150</span>, <span class="highlight-literal">"1389"</span>);
                Insert(<span class="highlight-literal">"TPO55093M"</span>, <span class="highlight-literal">"Timothy"</span>, <span class="highlight-literal">"P"</span>, <span class="highlight-literal">"O'Rourke"</span>, <span class="highlight-number">13</span>, <span class="highlight-number">100</span>, <span class="highlight-literal">"0736"</span>);
                Insert(<span class="highlight-literal">"VPA30890F"</span>, <span class="highlight-literal">"Victoria"</span>, <span class="highlight-literal">"P"</span>, <span class="highlight-literal">"Ashworth"</span>, <span class="highlight-number">6</span>, <span class="highlight-number">140</span>, <span class="highlight-literal">"0877"</span>);
                Insert(<span class="highlight-literal">"Y-L77953M"</span>, <span class="highlight-literal">"Yoshi"</span>, <span class="highlight-literal">""</span>, <span class="highlight-literal">"Latimer"</span>, <span class="highlight-number">12</span>, <span class="highlight-number">32</span>, <span class="highlight-literal">"1389"</span>);
            }
            <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> Insert(Text id,Text firstName,Text middleInitial,Text lastName,<span class="highlight-keyword">int</span> jobid,<span class="highlight-keyword">int</span> jobLevel,<span class="highlight-keyword">string</span> publisherId)
            {
                Employees e = <span class="highlight-keyword">new</span> Employees();
                BusinessProcess bp = <span class="highlight-keyword">new</span> BusinessProcess();
                bp.From = e;
                bp.AddAllColumns();
                bp.Activity = Activities.Insert;
                bp.ForFirstRow(<span class="highlight-keyword">delegate</span>()
                          {
                              e.Id.Value = id;
                              e.FirstName.Value = firstName;
                              e.MiddleInitial.Value = middleInitial;
                              e.LastName.Value = lastName;
                              e.JobId.Value = jobid;
                              e.JobLevel.Value = jobLevel;
                              e.PublisherId.Value = publisherId;
                          });
            }
        }
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Jobs : Entity
        {
            [PrimaryKey]
            <span class="highlight-keyword">internal</span> <span class="highlight-keyword">readonly</span> JobId Id = <span class="highlight-keyword">new</span> JobId();
            <span class="highlight-keyword">internal</span> <span class="highlight-keyword">readonly</span> TextColumn Description = <span class="highlight-keyword">new</span> TextColumn(<span class="highlight-literal">"Job_desc"</span>, <span class="highlight-literal">"50"</span>, <span class="highlight-literal">"Description"</span>);
            <span class="highlight-keyword">internal</span> <span class="highlight-keyword">readonly</span> JobLevel MinLevel = <span class="highlight-keyword">new</span> JobLevel(<span class="highlight-literal">"min_lvl"</span>){Caption = <span class="highlight-literal">"Min Level"</span>};
            <span class="highlight-keyword">internal</span> <span class="highlight-keyword">readonly</span> JobLevel MaxLevel = <span class="highlight-keyword">new</span> JobLevel(<span class="highlight-literal">"max_lvl"</span>){Caption = <span class="highlight-literal">"Max Level"</span>};
            <span class="highlight-keyword">public</span> Jobs():<span class="highlight-keyword">base</span>(<span class="highlight-literal">"jobs"</span>,DataSource)
            {
            }
            <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> InitializeWithTestData()
            {
                Truncate();
                Insert(<span class="highlight-number">1</span>, <span class="highlight-literal">"New Hire - Job not specified"</span>, <span class="highlight-number">10</span>, <span class="highlight-number">10</span>);
                Insert(<span class="highlight-number">2</span>, <span class="highlight-literal">"Chief Executive Officer"</span>, <span class="highlight-number">200</span>, <span class="highlight-number">250</span>);
                Insert(<span class="highlight-number">3</span>, <span class="highlight-literal">"Business Operations Manager"</span>, <span class="highlight-number">175</span>, <span class="highlight-number">225</span>);
                Insert(<span class="highlight-number">4</span>, <span class="highlight-literal">"Chief Financial Officier"</span>, <span class="highlight-number">175</span>, <span class="highlight-number">250</span>);
                Insert(<span class="highlight-number">5</span>, <span class="highlight-literal">"Publisher"</span>, <span class="highlight-number">150</span>, <span class="highlight-number">250</span>);
                Insert(<span class="highlight-number">6</span>, <span class="highlight-literal">"Managing Editor"</span>, <span class="highlight-number">140</span>, <span class="highlight-number">225</span>);
                Insert(<span class="highlight-number">7</span>, <span class="highlight-literal">"Marketing Manager"</span>, <span class="highlight-number">120</span>, <span class="highlight-number">200</span>);
                Insert(<span class="highlight-number">8</span>, <span class="highlight-literal">"Public Relations Manager"</span>, <span class="highlight-number">100</span>, <span class="highlight-number">175</span>);
                Insert(<span class="highlight-number">9</span>, <span class="highlight-literal">"Acquisitions Manager"</span>, <span class="highlight-number">75</span>, <span class="highlight-number">175</span>);
                Insert(<span class="highlight-number">10</span>, <span class="highlight-literal">"Productions Manager"</span>, <span class="highlight-number">75</span>, <span class="highlight-number">165</span>);
                Insert(<span class="highlight-number">11</span>, <span class="highlight-literal">"Operations Manager"</span>, <span class="highlight-number">75</span>, <span class="highlight-number">150</span>);
                Insert(<span class="highlight-number">12</span>, <span class="highlight-literal">"Editor"</span>, <span class="highlight-number">25</span>, <span class="highlight-number">100</span>);
                Insert(<span class="highlight-number">13</span>, <span class="highlight-literal">"Sales Representative"</span>, <span class="highlight-number">25</span>, <span class="highlight-number">100</span>);
                Insert(<span class="highlight-number">14</span>, <span class="highlight-literal">"Designer"</span>, <span class="highlight-number">25</span>, <span class="highlight-number">100</span>);
            }


            <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> Insert(<span class="highlight-keyword">int</span> jobId,Text description,<span class="highlight-keyword">int</span> minLevel,<span class="highlight-keyword">int</span> maxLevel)
            {
                Jobs j = <span class="highlight-keyword">new</span> Jobs();
                BusinessProcess bp = <span class="highlight-keyword">new</span> BusinessProcess();
                bp.From = j;
                bp.AddAllColumns();
                bp.Activity = Activities.Insert;
                bp.ForFirstRow(<span class="highlight-keyword">delegate</span>()
                          {
                              j.Id.Value = jobId;
                              j.Description.Value = description;
                              j.MinLevel.Value = minLevel;
                              j.MaxLevel.Value = maxLevel;
                          });
            }
        }
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Publishers : Entity
        {
            [PrimaryKey]
            <span class="highlight-keyword">internal</span> <span class="highlight-keyword">readonly</span> PublisherId Id = <span class="highlight-keyword">new</span> PublisherId();
            <span class="highlight-keyword">internal</span> <span class="highlight-keyword">readonly</span> TextColumn Name = <span class="highlight-keyword">new</span> TextColumn(<span class="highlight-literal">"pub_name"</span>, <span class="highlight-literal">"40"</span>, <span class="highlight-literal">"Name"</span>);
            <span class="highlight-keyword">internal</span> <span class="highlight-keyword">readonly</span> TextColumn City = <span class="highlight-keyword">new</span> TextColumn(<span class="highlight-literal">"City"</span>, <span class="highlight-literal">"20"</span>);
            <span class="highlight-keyword">internal</span> <span class="highlight-keyword">readonly</span> TextColumn State = <span class="highlight-keyword">new</span> TextColumn(<span class="highlight-literal">"State"</span>, <span class="highlight-literal">"2"</span>);
            <span class="highlight-keyword">internal</span> <span class="highlight-keyword">readonly</span> TextColumn Country = <span class="highlight-keyword">new</span> TextColumn(<span class="highlight-literal">"Country"</span>);
            <span class="highlight-keyword">public</span> Publishers():<span class="highlight-keyword">base</span>(<span class="highlight-literal">"Publishers"</span>,DataSource)
            {
            }
            <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> InitializeWithTestData()
            {
                Truncate();
                Insert(<span class="highlight-literal">"0736"</span>, <span class="highlight-literal">"New Moon Books"</span>, <span class="highlight-literal">"Boston"</span>, <span class="highlight-literal">"MA"</span>, <span class="highlight-literal">"USA"</span>);
                Insert(<span class="highlight-literal">"0877"</span>, <span class="highlight-literal">"Binnet &amp; Hardley"</span>, <span class="highlight-literal">"Washington"</span>, <span class="highlight-literal">"DC"</span>, <span class="highlight-literal">"USA"</span>);
                Insert(<span class="highlight-literal">"1389"</span>, <span class="highlight-literal">"Algodata Infosystems"</span>, <span class="highlight-literal">"Berkeley"</span>, <span class="highlight-literal">"CA"</span>, <span class="highlight-literal">"USA"</span>);
                Insert(<span class="highlight-literal">"1622"</span>, <span class="highlight-literal">"Five Lakes Publishing"</span>, <span class="highlight-literal">"Chicago"</span>, <span class="highlight-literal">"IL"</span>, <span class="highlight-literal">"USA"</span>);
                Insert(<span class="highlight-literal">"1756"</span>, <span class="highlight-literal">"Ramona Publishers"</span>, <span class="highlight-literal">"Dallas"</span>, <span class="highlight-literal">"TX"</span>, <span class="highlight-literal">"USA"</span>);
                Insert(<span class="highlight-literal">"9901"</span>, <span class="highlight-literal">"GGG&amp;G"</span>, <span class="highlight-literal">"M�nchen"</span>, <span class="highlight-literal">""</span>, <span class="highlight-literal">"Germany"</span>);
                Insert(<span class="highlight-literal">"9952"</span>, <span class="highlight-literal">"Scootney Books"</span>, <span class="highlight-literal">"New York"</span>, <span class="highlight-literal">"NY"</span>, <span class="highlight-literal">"USA"</span>);
                Insert(<span class="highlight-literal">"9999"</span>, <span class="highlight-literal">"Lucerne Publishing"</span>, <span class="highlight-literal">"Paris"</span>, <span class="highlight-literal">""</span>, <span class="highlight-literal">"France"</span>);
            }

            <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> Insert(Text publisherId,Text name,Text city,Text state,Text country)
            {
                Publishers p = <span class="highlight-keyword">new</span> Publishers();
                BusinessProcess bp = <span class="highlight-keyword">new</span> BusinessProcess();
                bp.From = p;
                bp.AddAllColumns();
                bp.Activity = Activities.Insert;
                bp.ForFirstRow(<span class="highlight-keyword">delegate</span>()
                          {
                              p.Id.Value = publisherId;
                              p.Name.Value = name;
                              p.City.Value = city;
                              p.State.Value = state;
                              p.Country.Value = country;
                          });
            }
        }
        <span class="highlight-keyword">static</span> Pubs()
        {
            <span class="highlight-comment">// a dataset datasource</span>
            DataSource = <span class="highlight-keyword">new</span> DataSetDataProvider();
            <span class="highlight-comment">// An mssql datasource that access the pubs db</span>
            <span class="highlight-comment">/*DataSource =
                SQLDataProviderBase.CreateSqlClientDataProvider(
                    "Integrated Security=SSPI;Persist Security Info=False;Initial Catalog=pubs;Data Source=(local)\\SQLEXPRESS;Connect Timeout=5;");*/</span>
        }

        <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> IEntityDataProvider DataSource;

        <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> JobId : NumberColumn
        {
            <span class="highlight-keyword">public</span> JobId()
                : <span class="highlight-keyword">base</span>(<span class="highlight-literal">"job_id"</span>, <span class="highlight-literal">"2"</span>, <span class="highlight-literal">"Job Id"</span>)
            {
            }
        }

        <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> JobLevel : NumberColumn
        {
            <span class="highlight-keyword">public</span> JobLevel(<span class="highlight-keyword">string</span> name)
                : <span class="highlight-keyword">base</span>(name ?? <span class="highlight-literal">"job_lvl"</span>, <span class="highlight-literal">"3"</span>, <span class="highlight-literal">"Job level"</span>)
            {
            }
            <span class="highlight-keyword">public</span> JobLevel()
                : <span class="highlight-keyword">this</span>(<span class="highlight-keyword">null</span>)
            {
            }
        }
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> PublisherId : TextColumn
        {
            <span class="highlight-keyword">public</span> PublisherId()
                : <span class="highlight-keyword">base</span>(<span class="highlight-literal">"pub_id"</span>, <span class="highlight-literal">"4"</span>, <span class="highlight-literal">"publisher id"</span>)
            {
            }
        }
    }
}</pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style="">Filter Usage<br />This example is in the form of Unit Tests. It references the NUnit framework. This framework can be downloaded from <a href="http://www.NUnit.org">www.NUnit.org</a>. For more information about unit testing visit: <a href="http://www.NUnit.org">www.NUnit.org</a>.<br />This example is based on test data. The code for the entities included in this test data can be found in the documentation of <a href="T_Firefly_Box_Data_Entity.htm">Entity</a><span id="cbc_2" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>C#</div><div class="code"><pre><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Collections.Generic;
<span class="highlight-keyword">using</span> System.Text;
<span class="highlight-keyword">using</span> Firefly.Box.Data.Advanced;
<span class="highlight-keyword">using</span> NUnit.Framework;
<span class="highlight-keyword">using</span> Firefly.Box;
<span class="highlight-keyword">using</span> Firefly.Box.Testing;

<span class="highlight-keyword">namespace</span> TestFirefly.Box.Documentation
{
    [TestFixture]
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> WhereUsage
    {
        [Test]
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> SimpleWhere()
        {
            var employees = <span class="highlight-keyword">new</span> Pubs.Employees();
            employees.InitializeWithTestData();

            var bp = <span class="highlight-keyword">new</span> BusinessProcess
                         {
                             From = employees
                         };
            bp.Where.Add(employees.JobLevel.IsEqualTo(<span class="highlight-number">150</span>));
            bp.Run();
            bp.Counter.ShouldBe(<span class="highlight-number">3</span>);
        }
        [Test]
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> AddingTwoFiltersBehavesAsAndWould()
        {
            var employees = <span class="highlight-keyword">new</span> Pubs.Employees();
            employees.InitializeWithTestData();

            var bp = <span class="highlight-keyword">new</span> BusinessProcess
            {
                From = employees
            };
            bp.Where.Add(employees.JobLevel.IsEqualTo(<span class="highlight-number">150</span>));
            bp.Where.Add(employees.JobId.IsLessThan(<span class="highlight-number">9</span>));
            bp.Run();
            bp.Counter.ShouldBe(<span class="highlight-number">1</span>);
        }
        [Test]
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> UsingAndAndOr()
        {
            var employees = <span class="highlight-keyword">new</span> Pubs.Employees();
            employees.InitializeWithTestData();

            var bp = <span class="highlight-keyword">new</span> BusinessProcess
            {
                From = employees
            };
            bp.Where.Add(employees.JobLevel.IsEqualTo(<span class="highlight-number">150</span>).And(
                        employees.JobId.IsLessThan(<span class="highlight-number">9</span>).Or(
                        employees.MiddleInitial.IsEqualTo(<span class="highlight-literal">"C"</span>))));
            bp.Run();
            bp.Counter.ShouldBe(<span class="highlight-number">2</span>);
        }
        [Test]
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> SendingDirectStringToTheDB()
        {
            var employees = <span class="highlight-keyword">new</span> Pubs.Employees();
            employees.InitializeWithTestData();
            var bp = <span class="highlight-keyword">new</span> BusinessProcess
                         {
                             From = employees
                         };
            bp.Where.Add(<span class="highlight-literal">"{0} in ({1},{2},{3})"</span>,employees.MiddleInitial, <span class="highlight-literal">"M"</span>, <span class="highlight-literal">"R"</span>, <span class="highlight-literal">"A"</span>);
            bp.Run();
            bp.Counter.ShouldBe(<span class="highlight-number">9</span>);
        }
        [Test]
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> UsingCustomInMemoryFilter()
        {
            var employees = <span class="highlight-keyword">new</span> Pubs.Employees();
            employees.InitializeWithTestData();
            var bp = <span class="highlight-keyword">new</span> BusinessProcess
            {
                From = employees
            };
            <span class="highlight-comment">//This has a slight performance penalty as this condition is evaluated in memory, and not by the database</span>
            bp.Where.Add(() =&gt; employees.MiddleInitial == <span class="highlight-literal">"M"</span> || employees.MiddleInitial == <span class="highlight-literal">"R"</span> || employees.MiddleInitial == <span class="highlight-literal">"A"</span>);
            bp.Run();
            bp.Counter.ShouldBe(<span class="highlight-number">9</span>);
        }
        [Test]
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> UsingAPreDefinedFilter()
        {
            var employees = <span class="highlight-keyword">new</span> Pubs.Employees();
            employees.InitializeWithTestData();
            var bp = <span class="highlight-keyword">new</span> BusinessProcess
            {
                From = employees
            };
            FilterCollection filter = <span class="highlight-keyword">new</span> FilterCollection();
            filter.Add(employees.JobLevel.IsEqualTo(<span class="highlight-number">150</span>));
            filter.Add(employees.JobId.IsLessThan(<span class="highlight-number">9</span>));

            bp.Where.Add(filter);
            bp.Run();
            bp.Counter.ShouldBe(<span class="highlight-number">1</span>);
        }
    }
}</pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(familyToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(familyToggle, event)" tabindex="0"><img id="familyToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Inheritance Hierarchy</span></h1><div id="familySection" class="section" name="collapseableSection" style=""><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Object</a><br />  <a href="T_Firefly_Box_Data_Advanced_ColumnBase.htm">Firefly.Box.Data.Advanced<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>ColumnBase</a><br />    <a href="T_Firefly_Box_Data_Advanced_TypedColumnBase_1.htm">Firefly.Box.Data.Advanced<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>TypedColumnBase</a><span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span><a href="T_Firefly_Box_Number.htm">Number</a><span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span><br />      <span class="selflink">Firefly.Box.Data<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>NumberColumn</span><br /></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="AllMembers_T_Firefly_Box_Data_NumberColumn.htm">NumberColumn Members</a></div><div class="seeAlsoStyle"><a href="N_Firefly_Box_Data.htm">Firefly.Box.Data Namespace</a></div></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"> </span>
<p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:info%40fireflybox.com?Subject=Firefly Box">info@fireflybox.com</a>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> <p />Copyright Firefly 2010</div></div></body></html>