<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>RelationCollection Class</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="Firefly.Box.Advanced" /><meta name="file" content="T_Firefly_Box_Advanced_RelationCollection" /><meta name="guid" content="T_Firefly_Box_Advanced_RelationCollection" /><xml><MSHelp:Attr Name="AssetID" Value="T:Firefly.Box.Advanced.RelationCollection" /><MSHelp:TOCTitle Title="RelationCollection Class" /><MSHelp:RLTitle Title="RelationCollection Class (Firefly.Box.Advanced)" /><MSHelp:Keyword Index="A" Term="T:Firefly.Box.Advanced.RelationCollection" /><MSHelp:Keyword Index="A" Term="frlrfFireflyBoxAdvancedRelationCollectionClassTopic" /><MSHelp:Keyword Index="K" Term="RelationCollection class" /><MSHelp:Keyword Index="K" Term="Firefly.Box.Advanced.RelationCollection class" /><MSHelp:Keyword Index="K" Term="RelationCollection class, about RelationCollection class" /><MSHelp:Keyword Index="F" Term="RelationCollection" /><MSHelp:Keyword Index="F" Term="Firefly.Box.Advanced.RelationCollection" /><MSHelp:Attr Name="HelpPriority" Value="2" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="Firefly.Box.dll" /><MSHelp:Attr Name="APIName" Value="Firefly.Box.Advanced.RelationCollection" /><MSHelp:Attr Name="DevLang" Value="CSharp" /><MSHelp:Attr Name="DevLang" Value="VB" /><MSHelp:Attr Name="DevLang" Value="C++" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="Abstract" Value="Represents the relations used by a certain task." /><MSHelp:Attr Name="AssemblyVersion" Value="3.4.23.6473" /></xml><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"></script></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /><input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Firefly Box</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">RelationCollection Class</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="AllMembers_T_Firefly_Box_Advanced_RelationCollection.htm">Members</a>  <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a>  <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a>  
  <span id="headfeedbackarea" class="feedbackhead">
      <a href="javascript:SubmitFeedback('info@fireflybox.com','Firefly Box','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">
        
        Send Feedback
      </a>
	</span>
</td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"> <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p></span><div class="summary">
            Represents the relations used by a certain task.
            </div><p />
    <b>Namespace:</b> 
   <a href="N_Firefly_Box_Advanced.htm">Firefly.Box.Advanced</a><br />
    <b>Assembly:</b>
   <span sdata="assembly">Firefly.Box</span> (in Firefly.Box.dll) Version: 3.4.23.6473 (3.4.23.6473)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">RelationCollection</span> : <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">IEnumerable</a>&lt;<a href="T_Firefly_Box_Relation.htm">Relation</a>&gt;, 
	<a href="http://msdn2.microsoft.com/en-us/library/h1x9x1b1" target="_blank">IEnumerable</a></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic (Declaration)</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">RelationCollection</span> _
	<span class="keyword">Implements</span> <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">IEnumerable</a>(<span class="keyword">Of</span> <a href="T_Firefly_Box_Relation.htm">Relation</a>), <a href="http://msdn2.microsoft.com/en-us/library/h1x9x1b1" target="_blank">IEnumerable</a></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">RelationCollection</span> : <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">IEnumerable</a>&lt;<a href="T_Firefly_Box_Relation.htm">Relation</a>^&gt;, 
	<a href="http://msdn2.microsoft.com/en-us/library/h1x9x1b1" target="_blank">IEnumerable</a></pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="">For a detailed explanation of using relations, see <a href="T_Firefly_Box_UIController.htm">UIController</a>.<a href="P_Firefly_Box_UIController_Relations.htm">Relations</a> and <a href="T_Firefly_Box_BusinessProcess.htm">BusinessProcess</a>.<a href="P_Firefly_Box_BusinessProcess_Relations.htm">Relations</a></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style="">This example demonstrates the usage of RelationsTypes<br />This example is in the form of Unit Tests. It references the NUnit framework. This framework can be downloaded from <a href="http://www.NUnit.org">www.NUnit.org</a>. For more information about unit testing visit: <a href="http://www.NUnit.org">www.NUnit.org</a>.<br />This example is based on test data. The code for the entities included in this test data can be found in the documentation of <a href="T_Firefly_Box_Data_Entity.htm">Entity</a><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>C#</div><div class="code"><pre><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Collections.Generic;
<span class="highlight-keyword">using</span> System.Text;
<span class="highlight-keyword">using</span> NUnit.Framework;
<span class="highlight-keyword">using</span> Firefly.Box;
<span class="highlight-keyword">using</span> Firefly.Box.Testing;

<span class="highlight-keyword">namespace</span> TestFirefly.Box.Documentation
{
    [TestFixture]
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> RelationsTypes
    {
        [Test]
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> Find()
        {
            var employees = <span class="highlight-keyword">new</span> Pubs.Employees();
            var jobs = <span class="highlight-keyword">new</span> Pubs.Jobs();
            employees.InitializeWithTestData();
            jobs.InitializeWithTestData();
            DeleteJobBusinessOperationsManager();

            var bp = <span class="highlight-keyword">new</span> BusinessProcess
            {
                From = employees
            };
            bp.Relations.Add(jobs, RelationType.Find,<span class="highlight-comment">//The default Relation Type</span>
                jobs.Id.IsEqualTo(employees.JobId));
            <span class="highlight-keyword">string</span> namesAndJobs = <span class="highlight-literal">""</span>;
            bp.ForEachRow(() =&gt;
            {
                namesAndJobs += employees.LastName.Value.TrimEnd() + <span class="highlight-literal">" - "</span> +
                                jobs.Description.Value.TrimEnd() + <span class="highlight-literal">"\n"</span>;
                <span class="highlight-keyword">if</span> (bp.Counter == <span class="highlight-number">5</span>)
                    bp.Exit();
            });
            namesAndJobs.ShouldBe(<span class="highlight-literal">"Cruz - Productions Manager\n"</span> +
                <span class="highlight-literal">"Devon - \n"</span> +<span class="highlight-comment">//This row in the job entity was not found</span>
                <span class="highlight-literal">"Roulet - Managing Editor\n"</span> +
                <span class="highlight-literal">"Domingues - Public Relations Manager\n"</span> +
                <span class="highlight-literal">"Hernadez - Publisher\n"</span>);
        }
        [Test]
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> Insert()
        {
            var jobs = <span class="highlight-keyword">new</span> Pubs.Jobs();
            jobs.InitializeWithTestData();
            jobs.CountRows().ShouldBe(<span class="highlight-number">14</span>);

            var bp = <span class="highlight-keyword">new</span> BusinessProcess();
            bp.Relations.Add(jobs, RelationType.Insert);
            bp.ForFirstRow(() =&gt;
                               {
                                   <span class="highlight-comment">//Settings the value for the new relation</span>
                                   jobs.Id.Value = <span class="highlight-number">15</span>;
                                   jobs.Description.Value = <span class="highlight-literal">"Software Developer"</span>;
                               });
            jobs.CountRows().ShouldBe(<span class="highlight-number">15</span>);<span class="highlight-comment">//Now there are 15 jobs, as the 15th job was inserted</span>
        }
        [Test]
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> InsertIfNotFound()
        {
            var employees = <span class="highlight-keyword">new</span> Pubs.Employees();
            var jobs = <span class="highlight-keyword">new</span> Pubs.Jobs();
            employees.InitializeWithTestData();
            jobs.Truncate();<span class="highlight-comment">//Truncating the jobs table, so it'll be </span>
            <span class="highlight-comment">//recreated using InsertIfNotFound</span>

            <span class="highlight-keyword">string</span> employeeAndJobs = <span class="highlight-literal">""</span>;
            var bp = <span class="highlight-keyword">new</span> BusinessProcess();
            bp.From = employees;
            var relationToJobs = bp.Relations.Add(jobs, RelationType.InsertIfNotFound,
                             jobs.Id.IsEqualTo(employees.JobId));

            bp.ForEachRow(() =&gt;
                              {
                                  <span class="highlight-keyword">if</span> (!relationToJobs.RowFound)
                                  {
                                      jobs.Id.Value = employees.JobId;
                                      jobs.Description.Value = <span class="highlight-literal">"Job "</span> + jobs.Id;
                                  }
                                  employeeAndJobs += employees.LastName.ToString().TrimEnd()
                                      + <span class="highlight-literal">" job "</span>
                                      + employees.JobId.ToString().Trim() + <span class="highlight-literal">" "</span> +
                                      (relationToJobs.RowFound ? <span class="highlight-literal">"Exists"</span> : <span class="highlight-literal">"Doesn't Exist"</span>) + <span class="highlight-literal">"\n"</span>;
                                  <span class="highlight-keyword">if</span> (bp.Counter == <span class="highlight-number">15</span>)
                                      bp.Exit();
                              });
            employeeAndJobs.ShouldBe(
                <span class="highlight-literal">"Cruz job 10 Doesn't Exist\n"</span> + <span class="highlight-comment">//At this time job 10 doesn't exist</span>
                <span class="highlight-literal">"Devon job 3 Doesn't Exist\n"</span> +
                <span class="highlight-literal">"Roulet job 6 Doesn't Exist\n"</span> +
                <span class="highlight-literal">"Domingues job 8 Doesn't Exist\n"</span> +
                <span class="highlight-literal">"Hernadez job 5 Doesn't Exist\n"</span> +
                <span class="highlight-literal">"Schmitt job 13 Doesn't Exist\n"</span> +
                <span class="highlight-literal">"Tonini job 11 Doesn't Exist\n"</span> +
                <span class="highlight-literal">"Roel job 6 Exists\n"</span> +<span class="highlight-comment">//Because job 6 was already inserted on row 3, it exists here</span>
                <span class="highlight-literal">"Lincoln job 14 Doesn't Exist\n"</span> +
                <span class="highlight-literal">"Chang job 4 Doesn't Exist\n"</span> +
                <span class="highlight-literal">"Thomas job 9 Doesn't Exist\n"</span> +
                <span class="highlight-literal">"Nagy job 7 Doesn't Exist\n"</span> +
                <span class="highlight-literal">"Snyder job 12 Doesn't Exist\n"</span> +
                <span class="highlight-literal">"Bennett job 12 Exists\n"</span> +<span class="highlight-comment">//Was added on the previous row</span>
                <span class="highlight-literal">"Labrune job 5 Exists\n"</span><span class="highlight-comment">//was added on the 5th row</span>
            );
        }
        [Test]
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> Join()
        {
            var employees = <span class="highlight-keyword">new</span> Pubs.Employees();
            var jobs = <span class="highlight-keyword">new</span> Pubs.Jobs();
            employees.InitializeWithTestData();
            jobs.InitializeWithTestData();
            DeleteJobBusinessOperationsManager();

            var bp = <span class="highlight-keyword">new</span> BusinessProcess
            {
                From = employees
            };
            bp.OrderBy.Segments.Add(employees.Id);
            bp.Relations.Add(jobs, RelationType.Join,
                jobs.Id.IsEqualTo(employees.JobId));
            <span class="highlight-keyword">string</span> namesAndJobs = <span class="highlight-literal">""</span>;
            bp.ForEachRow(() =&gt;
            {
                namesAndJobs += employees.LastName.Value.TrimEnd() + <span class="highlight-literal">" - "</span> +
                                jobs.Description.Value.TrimEnd() + <span class="highlight-literal">"\n"</span>;
                <span class="highlight-keyword">if</span> (bp.Counter == <span class="highlight-number">5</span>)
                    bp.Exit();
            });
            namesAndJobs.ShouldBe(<span class="highlight-literal">"Cruz - Productions Manager\n"</span> +
                <span class="highlight-literal">"Roulet - Managing Editor\n"</span> +<span class="highlight-comment">//Devon was not written as his job (5) was deleted</span>
                <span class="highlight-literal">"Domingues - Public Relations Manager\n"</span> +
                <span class="highlight-literal">"Hernadez - Publisher\n"</span>+
                <span class="highlight-literal">"Schmitt - Sales Representative\n"</span>);
        }
        [Test]
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> OuterJoin()
        {
            var employees = <span class="highlight-keyword">new</span> Pubs.Employees();
            var jobs = <span class="highlight-keyword">new</span> Pubs.Jobs();
            employees.InitializeWithTestData();
            jobs.InitializeWithTestData();
            DeleteJobBusinessOperationsManager();

            var bp = <span class="highlight-keyword">new</span> BusinessProcess
            {
                From = employees
            };
            bp.OrderBy.Segments.Add(employees.Id);
            bp.Relations.Add(jobs, RelationType.OuterJoin,
                jobs.Id.IsEqualTo(employees.JobId));
            <span class="highlight-keyword">string</span> namesAndJobs = <span class="highlight-literal">""</span>;
            bp.ForEachRow(() =&gt;
            {
                namesAndJobs += employees.LastName.Value.TrimEnd() + <span class="highlight-literal">" - "</span> +
                                jobs.Description.Value.TrimEnd() + <span class="highlight-literal">"\n"</span>;
                <span class="highlight-keyword">if</span> (bp.Counter == <span class="highlight-number">5</span>)
                    bp.Exit();
            });
            namesAndJobs.ShouldBe(<span class="highlight-literal">"Cruz - Productions Manager\n"</span> +
                <span class="highlight-literal">"Roulet - Managing Editor\n"</span> +
                <span class="highlight-literal">"Devon - \n"</span> +
                <span class="highlight-literal">"Domingues - Public Relations Manager\n"</span> +
                <span class="highlight-literal">"Hernadez - Publisher\n"</span>);
        }
        <span class="highlight-keyword">void</span> DeleteJobBusinessOperationsManager()
        {
            var jobs = <span class="highlight-keyword">new</span> Pubs.Jobs();
            var bp = <span class="highlight-keyword">new</span> BusinessProcess()
                         {
                             From = jobs,
                             Activity = Activities.Delete
                         };
            bp.Where.Add(jobs.Id.IsEqualTo(<span class="highlight-number">3</span>));
            bp.Run();
        }
    }
    }</pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(familyToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(familyToggle, event)" tabindex="0"><img id="familyToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Inheritance Hierarchy</span></h1><div id="familySection" class="section" name="collapseableSection" style=""><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Object</a><br />  <span class="selflink">Firefly.Box.Advanced<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>RelationCollection</span><br /></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="AllMembers_T_Firefly_Box_Advanced_RelationCollection.htm">RelationCollection Members</a></div><div class="seeAlsoStyle"><a href="N_Firefly_Box_Advanced.htm">Firefly.Box.Advanced Namespace</a></div></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"> </span>
<p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:info%40fireflybox.com?Subject=Firefly Box">info@fireflybox.com</a>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> <p />Copyright Firefly 2010</div></div></body></html>